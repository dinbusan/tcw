{"file":"components-B3jhR1xy.js","mappings":"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","names":[],"sources":["../../../../node_modules/@unhead/vue/dist/shared/vue.8fc199ce.mjs","../../../../node_modules/@unhead/vue/dist/index.mjs","../../../../node_modules/nuxt/dist/head/runtime/components.js"],"sourcesContent":["import { ref, watchEffect, watch, getCurrentInstance, onBeforeUnmount, onDeactivated, onActivated } from 'vue';\nimport { i as injectHead, r as resolveUnrefHeadInput } from './vue.f49591ad.mjs';\n\nfunction useHead(input, options = {}) {\n  const head = options.head || injectHead();\n  if (head) {\n    if (!head.ssr)\n      return clientUseHead(head, input, options);\n    return head.push(input, options);\n  }\n}\nfunction clientUseHead(head, input, options = {}) {\n  const deactivated = ref(false);\n  const resolvedInput = ref({});\n  watchEffect(() => {\n    resolvedInput.value = deactivated.value ? {} : resolveUnrefHeadInput(input);\n  });\n  const entry = head.push(resolvedInput.value, options);\n  watch(resolvedInput, (e) => {\n    entry.patch(e);\n  });\n  const vm = getCurrentInstance();\n  if (vm) {\n    onBeforeUnmount(() => {\n      entry.dispose();\n    });\n    onDeactivated(() => {\n      deactivated.value = true;\n    });\n    onActivated(() => {\n      deactivated.value = false;\n    });\n  }\n  return entry;\n}\n\nexport { useHead as u };\n","import { useScript as useScript$1 } from 'unhead';\nexport { CapoPlugin, HashHydrationPlugin, createHeadCore } from 'unhead';\nimport { i as injectHead, h as headSymbol, V as Vue3 } from './shared/vue.f49591ad.mjs';\nexport { c as createHead, a as createServerHead, r as resolveUnrefHeadInput, s as setHeadInjectionHandler } from './shared/vue.f49591ad.mjs';\nimport { composableNames, whitelistSafeInput, unpackMeta } from '@unhead/shared';\nimport { u as useHead } from './shared/vue.8fc199ce.mjs';\nimport { getCurrentInstance, onMounted, isRef, watch, onScopeDispose, ref } from 'vue';\n\nconst coreComposableNames = [\n  \"injectHead\"\n];\nconst unheadVueComposablesImports = {\n  \"@unhead/vue\": [...coreComposableNames, ...composableNames]\n};\n\nfunction useHeadSafe(input, options = {}) {\n  return useHead(input, { ...options, transform: whitelistSafeInput });\n}\n\nfunction registerVueScopeHandlers(script, scope) {\n  if (!scope) {\n    return;\n  }\n  const _registerCb = (key, cb) => {\n    if (!script._cbs[key]) {\n      cb(script.instance);\n      return () => {\n      };\n    }\n    let i = script._cbs[key].push(cb);\n    const destroy = () => {\n      if (i) {\n        script._cbs[key]?.splice(i - 1, 1);\n        i = null;\n      }\n    };\n    onScopeDispose(destroy);\n    return destroy;\n  };\n  script.onLoaded = (cb) => _registerCb(\"loaded\", cb);\n  script.onError = (cb) => _registerCb(\"error\", cb);\n  onScopeDispose(() => {\n    script._triggerAbortController?.abort();\n  });\n}\nfunction useScript(_input, _options) {\n  const input = typeof _input === \"string\" ? { src: _input } : _input;\n  const options = _options || {};\n  const head = options?.head || injectHead();\n  options.head = head;\n  const scope = getCurrentInstance();\n  options.eventContext = scope;\n  if (scope && typeof options.trigger === \"undefined\") {\n    options.trigger = onMounted;\n  } else if (isRef(options.trigger)) {\n    const refTrigger = options.trigger;\n    let off;\n    options.trigger = new Promise((resolve) => {\n      off = watch(refTrigger, (val) => {\n        if (val) {\n          resolve(true);\n        }\n      }, {\n        immediate: true\n      });\n      onScopeDispose(() => resolve(false), true);\n    }).then((val) => {\n      off?.();\n      return val;\n    });\n  }\n  head._scriptStatusWatcher = head._scriptStatusWatcher || head.hooks.hook(\"script:updated\", ({ script: s }) => {\n    s._statusRef.value = s.status;\n  });\n  const script = useScript$1(input, options);\n  script._statusRef = script._statusRef || ref(script.status);\n  registerVueScopeHandlers(script, scope);\n  return new Proxy(script, {\n    get(_, key, a) {\n      return Reflect.get(_, key === \"status\" ? \"_statusRef\" : key, a);\n    }\n  });\n}\n\nfunction useSeoMeta(input, options) {\n  const { title, titleTemplate, ...meta } = input;\n  return useHead({\n    title,\n    titleTemplate,\n    // @ts-expect-error runtime type\n    _flatMeta: meta\n  }, {\n    ...options,\n    transform(t) {\n      const meta2 = unpackMeta({ ...t._flatMeta });\n      delete t._flatMeta;\n      return {\n        // @ts-expect-error runtime type\n        ...t,\n        meta: meta2\n      };\n    }\n  });\n}\n\nfunction useServerHead(input, options = {}) {\n  const head = options.head || injectHead();\n  delete options.head;\n  if (head)\n    return head.push(input, { ...options, mode: \"server\" });\n}\n\nfunction useServerHeadSafe(input, options = {}) {\n  return useHeadSafe(input, { ...options, mode: \"server\" });\n}\n\nfunction useServerSeoMeta(input, options) {\n  return useSeoMeta(input, { ...options, mode: \"server\" });\n}\n\nconst Vue2ProvideUnheadPlugin = (_Vue, head) => {\n  _Vue.mixin({\n    beforeCreate() {\n      const options = this.$options;\n      const origProvide = options.provide;\n      options.provide = function() {\n        let origProvideResult;\n        if (typeof origProvide === \"function\")\n          origProvideResult = origProvide.call(this);\n        else\n          origProvideResult = origProvide || {};\n        return {\n          ...origProvideResult,\n          [headSymbol]: head\n        };\n      };\n    }\n  });\n};\n\nconst VueHeadMixin = {\n  created() {\n    let source = false;\n    if (Vue3) {\n      const instance = getCurrentInstance();\n      if (!instance)\n        return;\n      const options = instance.type;\n      if (!options || !(\"head\" in options))\n        return;\n      source = typeof options.head === \"function\" ? () => options.head.call(instance.proxy) : options.head;\n    } else {\n      const head = this.$options.head;\n      if (head) {\n        source = typeof head === \"function\" ? () => head.call(this) : head;\n      }\n    }\n    source && useHead(source);\n  }\n};\n\nexport { Vue2ProvideUnheadPlugin, VueHeadMixin, injectHead, unheadVueComposablesImports, useHead, useHeadSafe, useScript, useSeoMeta, useServerHead, useServerHeadSafe, useServerSeoMeta };\n","import { defineComponent } from \"vue\";\nimport { useHead } from \"@unhead/vue\";\nconst removeUndefinedProps = (props) => {\n  const filteredProps = /* @__PURE__ */ Object.create(null);\n  for (const key in props) {\n    const value = props[key];\n    if (value !== void 0) {\n      filteredProps[key] = value;\n    }\n  }\n  return filteredProps;\n};\nconst setupForUseMeta = (metaFactory, renderChild) => (props, ctx) => {\n  useHead(() => metaFactory({ ...removeUndefinedProps(props), ...ctx.attrs }, ctx));\n  return () => renderChild ? ctx.slots.default?.() : null;\n};\nconst globalProps = {\n  accesskey: String,\n  autocapitalize: String,\n  autofocus: {\n    type: Boolean,\n    default: void 0\n  },\n  class: [String, Object, Array],\n  contenteditable: {\n    type: Boolean,\n    default: void 0\n  },\n  contextmenu: String,\n  dir: String,\n  draggable: {\n    type: Boolean,\n    default: void 0\n  },\n  enterkeyhint: String,\n  exportparts: String,\n  hidden: {\n    type: Boolean,\n    default: void 0\n  },\n  id: String,\n  inputmode: String,\n  is: String,\n  itemid: String,\n  itemprop: String,\n  itemref: String,\n  itemscope: String,\n  itemtype: String,\n  lang: String,\n  nonce: String,\n  part: String,\n  slot: String,\n  spellcheck: {\n    type: Boolean,\n    default: void 0\n  },\n  style: String,\n  tabindex: String,\n  title: String,\n  translate: String\n};\nexport const NoScript = defineComponent({\n  name: \"NoScript\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    title: String,\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((props, { slots }) => {\n    const noscript = { ...props };\n    const slotVnodes = slots.default?.();\n    const textContent = slotVnodes ? slotVnodes.filter(({ children }) => children).map(({ children }) => children).join(\"\") : \"\";\n    if (textContent) {\n      noscript.children = textContent;\n    }\n    return {\n      noscript: [noscript]\n    };\n  })\n});\nexport const Link = defineComponent({\n  name: \"Link\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    as: String,\n    crossorigin: String,\n    disabled: Boolean,\n    fetchpriority: String,\n    href: String,\n    hreflang: String,\n    imagesizes: String,\n    imagesrcset: String,\n    integrity: String,\n    media: String,\n    prefetch: {\n      type: Boolean,\n      default: void 0\n    },\n    referrerpolicy: String,\n    rel: String,\n    sizes: String,\n    title: String,\n    type: String,\n    /** @deprecated **/\n    methods: String,\n    /** @deprecated **/\n    target: String,\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((link) => ({\n    link: [link]\n  }))\n});\nexport const Base = defineComponent({\n  name: \"Base\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    href: String,\n    target: String\n  },\n  setup: setupForUseMeta((base) => ({\n    base\n  }))\n});\nexport const Title = defineComponent({\n  name: \"Title\",\n  inheritAttrs: false,\n  setup: setupForUseMeta((_, { slots }) => {\n    if (import.meta.dev) {\n      const defaultSlot = slots.default?.();\n      if (defaultSlot && (defaultSlot.length > 1 || typeof defaultSlot[0].children !== \"string\")) {\n        console.error(\"<Title> can take only one string in its default slot.\");\n      }\n      return {\n        title: defaultSlot?.[0]?.children || null\n      };\n    }\n    return {\n      title: slots.default?.()?.[0]?.children || null\n    };\n  })\n});\nexport const Meta = defineComponent({\n  name: \"Meta\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    charset: String,\n    content: String,\n    httpEquiv: String,\n    name: String,\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((props) => {\n    const meta = { ...props };\n    if (meta.httpEquiv) {\n      meta[\"http-equiv\"] = meta.httpEquiv;\n      delete meta.httpEquiv;\n    }\n    return {\n      meta: [meta]\n    };\n  })\n});\nexport const Style = defineComponent({\n  name: \"Style\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    type: String,\n    media: String,\n    nonce: String,\n    title: String,\n    /** @deprecated **/\n    scoped: {\n      type: Boolean,\n      default: void 0\n    },\n    body: Boolean,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((props, { slots }) => {\n    const style = { ...props };\n    const textContent = slots.default?.()?.[0]?.children;\n    if (textContent) {\n      if (import.meta.dev && typeof textContent !== \"string\") {\n        console.error(\"<Style> can only take a string in its default slot.\");\n      }\n      style.children = textContent;\n    }\n    return {\n      style: [style]\n    };\n  })\n});\nexport const Head = defineComponent({\n  name: \"Head\",\n  inheritAttrs: false,\n  setup: (_props, ctx) => () => ctx.slots.default?.()\n});\nexport const Html = defineComponent({\n  name: \"Html\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    manifest: String,\n    version: String,\n    xmlns: String,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((htmlAttrs) => ({ htmlAttrs }), true)\n});\nexport const Body = defineComponent({\n  name: \"Body\",\n  inheritAttrs: false,\n  props: {\n    ...globalProps,\n    renderPriority: [String, Number]\n  },\n  setup: setupForUseMeta((bodyAttrs) => ({ bodyAttrs }), true)\n});\n"],"version":3}